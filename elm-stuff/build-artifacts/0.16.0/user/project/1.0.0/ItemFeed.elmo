Elm.ItemFeed = Elm.ItemFeed || {};
Elm.ItemFeed.make = function (_elm) {
   "use strict";
   _elm.ItemFeed = _elm.ItemFeed || {};
   if (_elm.ItemFeed.values) return _elm.ItemFeed.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $Html$Events = Elm.Html.Events.make(_elm),
   $Item = Elm.Item.make(_elm),
   $ItemList = Elm.ItemList.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var update = F2(function (action,model) {
      var _p0 = action;
      switch (_p0.ctor)
      {case "TodoList": var _p3 = _p0._0;
           var _p1 = _p3;
           if (_p1.ctor === "SubAction") {
                 var _p2 = _p1._1;
                 switch (_p2.ctor)
                 {case "Pin": return _U.update(model,
                      {todoList: A2($ItemList.update,_p3,model.todoList)});
                    case "Unpin": return _U.update(model,
                      {todoList: A2($ItemList.update,_p3,model.todoList)});
                    case "MarkAsDone": return _U.update(model,
                      {todoList: A2($ItemList.update,_p3,model.todoList)});
                    case "MarkUndone": return _U.update(model,
                      {todoList: A2($ItemList.update,_p3,model.todoList)});
                    case "Truncate": return _U.update(model,
                      {todoList: A2($ItemList.update,_p3,model.todoList)});
                    default: return _U.update(model,
                      {todoList: A2($ItemList.update,_p3,model.todoList)});}
              } else {
                 return _U.update(model,
                 {todoList: A2($ItemList.update,_p3,model.todoList)});
              }
         case "DoneList": return _U.update(model,
           {doneList: A2($ItemList.update,_p0._0,model.doneList)});
         case "SaveContent": return _U.update(model,
           {reminderField: _p0._0});
         default: return _U.update(model,{reminderDate: _p0._0});}
   });
   var SaveDate = function (a) {
      return {ctor: "SaveDate",_0: a};
   };
   var SaveContent = function (a) {
      return {ctor: "SaveContent",_0: a};
   };
   var DoneList = function (a) {
      return {ctor: "DoneList",_0: a};
   };
   var TodoList = function (a) {
      return {ctor: "TodoList",_0: a};
   };
   var view = F2(function (address,model) {
      return A2($Html.div,
      _U.list([]),
      _U.list([_U.eq($List.length(model.todoList.items),
              0) ? A2($Html.p,_U.list([]),_U.list([])) : A2($Html.h1,
              _U.list([]),
              _U.list([$Html.text("To do")]))
              ,A2($ItemList.view,
              A2($Signal.forwardTo,address,TodoList),
              model.todoList)
              ,_U.eq($List.length(model.doneList.items),0) ? A2($Html.p,
              _U.list([]),
              _U.list([])) : A2($Html.h1,
              _U.list([]),
              _U.list([$Html.text("Done")]))
              ,A2($ItemList.view,
              A2($Signal.forwardTo,address,DoneList),
              model.doneList)
              ,A2($Html.p,_U.list([]),_U.list([]))
              ,A2($Html.h1,_U.list([]),_U.list([$Html.text("Reminder")]))
              ,A2($Html.input,
              _U.list([$Html$Attributes.placeholder("New Reminder")
                      ,A3($Html$Events.on,
                      "input",
                      $Html$Events.targetValue,
                      function (str) {
                         return A2($Signal.message,address,SaveContent(str));
                      })
                      ,$Html$Attributes.type$("text")
                      ,$Html$Attributes.value(model.reminderField)]),
              _U.list([]))
              ,A2($Html.input,
              _U.list([$Html$Attributes.type$("date")
                      ,A3($Html$Events.on,
                      "input",
                      $Html$Events.targetValue,
                      function (date) {
                         return A2($Signal.message,address,SaveDate(date));
                      })
                      ,$Html$Attributes.value(model.reminderDate)]),
              _U.list([]))
              ,A2($Html.button,
              _U.list([A2($Html$Events.onClick,
              address,
              TodoList($ItemList.Add(A2($Item.newReminder,
              model.reminderField,
              model.reminderDate))))]),
              _U.list([$Html.text("Add")]))]));
   });
   var init = {todoList: $ItemList.init
              ,doneList: $ItemList.initEmpty
              ,reminderField: ""
              ,reminderDate: "01-01-2015"};
   var Model = F4(function (a,b,c,d) {
      return {todoList: a
             ,doneList: b
             ,reminderField: c
             ,reminderDate: d};
   });
   return _elm.ItemFeed.values = {_op: _op
                                 ,Model: Model
                                 ,init: init
                                 ,TodoList: TodoList
                                 ,DoneList: DoneList
                                 ,SaveContent: SaveContent
                                 ,SaveDate: SaveDate
                                 ,update: update
                                 ,view: view};
};