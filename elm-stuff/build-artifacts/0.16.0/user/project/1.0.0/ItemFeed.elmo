Elm.ItemFeed = Elm.ItemFeed || {};
Elm.ItemFeed.make = function (_elm) {
   "use strict";
   _elm.ItemFeed = _elm.ItemFeed || {};
   if (_elm.ItemFeed.values) return _elm.ItemFeed.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Char = Elm.Char.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $Html$Events = Elm.Html.Events.make(_elm),
   $Item = Elm.Item.make(_elm),
   $ItemList = Elm.ItemList.make(_elm),
   $ItemListPair = Elm.ItemListPair.make(_elm),
   $Json$Decode = Elm.Json.Decode.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Set = Elm.Set.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var is13 = function (code) {
      return _U.eq(code,
      13) ? $Result.Ok({ctor: "_Tuple0"}) : $Result.Err("not the right key code");
   };
   var onEnter = F2(function (address,action) {
      return A3($Html$Events.on,
      "keydown",
      A2($Json$Decode.customDecoder,$Html$Events.keyCode,is13),
      function (_p0) {
         return A2($Signal.message,address,action);
      });
   });
   var ToggleAddReminder = {ctor: "ToggleAddReminder"};
   var KeyPress = F2(function (a,b) {
      return {ctor: "KeyPress",_0: a,_1: b};
   });
   var SaveDate = function (a) {
      return {ctor: "SaveDate",_0: a};
   };
   var SaveContent = function (a) {
      return {ctor: "SaveContent",_0: a};
   };
   var TodoDoneListPair = function (a) {
      return {ctor: "TodoDoneListPair",_0: a};
   };
   var view = F2(function (address,model) {
      return A2($Html.div,
      _U.list([$Html$Attributes.style(_U.list([{ctor: "_Tuple2"
                                               ,_0: "width"
                                               ,_1: "40%"}
                                              ,{ctor: "_Tuple2",_0: "margin",_1: "auto"}]))]),
      _U.list([A2($Html.div,
              _U.list([]),
              _U.list([A2($ItemListPair.view,
              A2($Signal.forwardTo,address,TodoDoneListPair),
              model.todoDoneListPair)]))
              ,A2($Html.p,_U.list([]),_U.list([]))
              ,$Basics.not(model.addReminderVisibility) ? A2($Html.p,
              _U.list([]),
              _U.list([])) : A2($Html.div,
              _U.list([]),
              _U.list([A2($Html.h1,
                      _U.list([]),
                      _U.list([$Html.text("Reminder")]))
                      ,A2($Html.input,
                      _U.list([$Html$Attributes.placeholder("New Reminder")
                              ,A3($Html$Events.on,
                              "input",
                              $Html$Events.targetValue,
                              function (str) {
                                 return A2($Signal.message,address,SaveContent(str));
                              })
                              ,$Html$Attributes.type$("text")
                              ,$Html$Attributes.value(model.reminderField)
                              ,A2(onEnter,
                              address,
                              TodoDoneListPair($ItemListPair.TodoList($ItemList.AddNew(A2($Item.newReminder,
                              model.reminderField,
                              model.reminderDate)))))]),
                      _U.list([]))
                      ,A2($Html.input,
                      _U.list([$Html$Attributes.type$("date")
                              ,A3($Html$Events.on,
                              "input",
                              $Html$Events.targetValue,
                              function (date) {
                                 return A2($Signal.message,address,SaveDate(date));
                              })
                              ,$Html$Attributes.value(model.reminderDate)
                              ,A2(onEnter,
                              address,
                              TodoDoneListPair($ItemListPair.TodoList($ItemList.AddNew(A2($Item.newReminder,
                              model.reminderField,
                              model.reminderDate)))))]),
                      _U.list([]))
                      ,A2($Html.button,
                      _U.list([A2($Html$Events.onClick,
                      address,
                      TodoDoneListPair($ItemListPair.TodoList($ItemList.AddNew(A2($Item.newReminder,
                      model.reminderField,
                      model.reminderDate)))))]),
                      _U.list([$Html.text("Add")]))]))]));
   });
   var getNextItem = function (itemListPair) {
      return $ItemListPair.getNextItem(itemListPair);
   };
   var getNextItemList = function (itemListPair) {
      return $ItemListPair.getNextItemList(itemListPair);
   };
   var getPreviousItem = function (itemListPair) {
      return $ItemListPair.getPreviousItem(itemListPair);
   };
   var getPreviousItemList = function (itemListPair) {
      return $ItemListPair.getPreviousItemList(itemListPair);
   };
   var getSelectedItem = function (itemListPair) {
      return $ItemListPair.getSelectedItem(itemListPair);
   };
   var getSelectedItemList = function (itemListPair) {
      return $ItemListPair.getSelectedItemList(itemListPair);
   };
   var update = F2(function (action,model) {
      update: while (true) {
         var _p1 = action;
         switch (_p1.ctor)
         {case "TodoDoneListPair": return _U.update(model,
              {todoDoneListPair: A2($ItemListPair.update,
              _p1._0,
              model.todoDoneListPair)});
            case "SaveContent": return _U.update(model,
              {reminderField: _p1._0});
            case "SaveDate": return _U.update(model,{reminderDate: _p1._0});
            case "KeyPress": var _p12 = _p1._1;
              if (_p1._0) {
                    var adaptedPair = function () {
                       if (A2($Set.member,79,_p12)) {
                             var _p2 = getSelectedItem(model.todoDoneListPair);
                             var id = _p2._0;
                             return getSelectedItemList(model.todoDoneListPair) ? A2($ItemListPair.update,
                             $ItemListPair.TodoList(A2($ItemList.SubAction,
                             id,
                             $Item.ToggleTruncate)),
                             model.todoDoneListPair) : A2($ItemListPair.update,
                             $ItemListPair.DoneList(A2($ItemList.SubAction,
                             id,
                             $Item.ToggleTruncate)),
                             model.todoDoneListPair);
                          } else if (A2($Set.member,80,_p12))
                          return A2($ItemListPair.update,
                             $ItemListPair.TogglePin,
                             model.todoDoneListPair); else if (A2($Set.member,88,_p12))
                             return A2($ItemListPair.update,
                                $ItemListPair.ToggleDone,
                                model.todoDoneListPair); else if (A2($Set.member,74,_p12))
                                return A2($ItemListPair.update,
                                   $ItemListPair.SelectNext,
                                   model.todoDoneListPair); else if (A2($Set.member,75,_p12))
                                   return A2($ItemListPair.update,
                                      $ItemListPair.SelectPrevious,
                                      model.todoDoneListPair); else return model.todoDoneListPair;
                    }();
                    var resultPair = function () {
                       if (A2($Set.member,83,_p12)) {
                             var _p3 = getSelectedItem(adaptedPair);
                             var currentId = _p3._0;
                             var updatedPair = function () {
                                var newPair = A2($ItemListPair.update,
                                $ItemListPair.TodoList($ItemList.SortOldWithoutPin),
                                adaptedPair);
                                return A2($ItemListPair.update,
                                $ItemListPair.DoneList($ItemList.SortOldWithoutPin),
                                newPair);
                             }();
                             if (getSelectedItemList(adaptedPair)) {
                                   var _p4 = getSelectedItem(updatedPair);
                                   var newSelectedId = _p4._0;
                                   var updatedNewPair = A2($ItemListPair.update,
                                   $ItemListPair.TodoList(A2($ItemList.SubAction,
                                   currentId,
                                   $Item.ToggleSelect)),
                                   updatedPair);
                                   return A2($ItemListPair.update,
                                   $ItemListPair.TodoList(A2($ItemList.SubAction,
                                   newSelectedId,
                                   $Item.ToggleSelect)),
                                   updatedNewPair);
                                } else {
                                   var _p5 = getSelectedItem(updatedPair);
                                   var newSelectedId = _p5._0;
                                   var updatedNewPair = A2($ItemListPair.update,
                                   $ItemListPair.DoneList(A2($ItemList.SubAction,
                                   currentId,
                                   $Item.ToggleSelect)),
                                   updatedPair);
                                   return A2($ItemListPair.update,
                                   $ItemListPair.DoneList(A2($ItemList.SubAction,
                                   newSelectedId,
                                   $Item.ToggleSelect)),
                                   updatedNewPair);
                                }
                          } else {
                             var _p6 = getSelectedItem(adaptedPair);
                             var currentId = _p6._0;
                             var updatedPair = function () {
                                var newPair = A2($ItemListPair.update,
                                $ItemListPair.TodoList($ItemList.SortNewWithPin),
                                adaptedPair);
                                return A2($ItemListPair.update,
                                $ItemListPair.DoneList($ItemList.SortNewWithPin),
                                newPair);
                             }();
                             if (getSelectedItemList(adaptedPair)) {
                                   var _p7 = getSelectedItem(updatedPair);
                                   var newSelectedId = _p7._0;
                                   var updatedNewPair = A2($ItemListPair.update,
                                   $ItemListPair.TodoList(A2($ItemList.SubAction,
                                   currentId,
                                   $Item.ToggleSelect)),
                                   updatedPair);
                                   return A2($ItemListPair.update,
                                   $ItemListPair.TodoList(A2($ItemList.SubAction,
                                   newSelectedId,
                                   $Item.ToggleSelect)),
                                   updatedNewPair);
                                } else {
                                   var _p8 = getSelectedItem(updatedPair);
                                   var newSelectedId = _p8._0;
                                   var updatedNewPair = A2($ItemListPair.update,
                                   $ItemListPair.DoneList(A2($ItemList.SubAction,
                                   currentId,
                                   $Item.ToggleSelect)),
                                   updatedPair);
                                   return A2($ItemListPair.update,
                                   $ItemListPair.DoneList(A2($ItemList.SubAction,
                                   newSelectedId,
                                   $Item.ToggleSelect)),
                                   updatedNewPair);
                                }
                          }
                    }();
                    if (A2($Set.member,86,_p12)) return _U.update(model,
                       {todoDoneListPair: A2($ItemListPair.update,
                       $ItemListPair.ToggleVisibilityDone,
                       resultPair)}); else if (A2($Set.member,82,_p12)) {
                             var resultModel = _U.update(model,
                             {todoDoneListPair: resultPair});
                             var _v1 = ToggleAddReminder,_v2 = resultModel;
                             action = _v1;
                             model = _v2;
                             continue update;
                          } else return _U.update(model,{todoDoneListPair: resultPair});
                 } else return _U.update(model,
                 {todoDoneListPair: function () {
                    var _p9 = getSelectedItem(model.todoDoneListPair);
                    var currentId = _p9._0;
                    var updatedPair = function () {
                       var newPair = A2($ItemListPair.update,
                       $ItemListPair.TodoList($ItemList.SortNewWithPin),
                       model.todoDoneListPair);
                       return A2($ItemListPair.update,
                       $ItemListPair.DoneList($ItemList.SortNewWithPin),
                       newPair);
                    }();
                    if (getSelectedItemList(model.todoDoneListPair)) {
                          var _p10 = getSelectedItem(updatedPair);
                          var newSelectedId = _p10._0;
                          var updatedNewPair = A2($ItemListPair.update,
                          $ItemListPair.TodoList(A2($ItemList.SubAction,
                          currentId,
                          $Item.ToggleSelect)),
                          updatedPair);
                          return A2($ItemListPair.update,
                          $ItemListPair.TodoList(A2($ItemList.SubAction,
                          newSelectedId,
                          $Item.ToggleSelect)),
                          updatedNewPair);
                       } else {
                          var _p11 = getSelectedItem(updatedPair);
                          var newSelectedId = _p11._0;
                          var updatedNewPair = A2($ItemListPair.update,
                          $ItemListPair.DoneList(A2($ItemList.SubAction,
                          currentId,
                          $Item.ToggleSelect)),
                          updatedPair);
                          return A2($ItemListPair.update,
                          $ItemListPair.DoneList(A2($ItemList.SubAction,
                          newSelectedId,
                          $Item.ToggleSelect)),
                          updatedNewPair);
                       }
                 }()});
            default: return _U.update(model,
              {addReminderVisibility: $Basics.not(model.addReminderVisibility)});}
      }
   });
   var init = {todoDoneListPair: $ItemListPair.init
              ,reminderField: ""
              ,reminderDate: "2015-01-01"
              ,addReminderVisibility: false};
   var Model = F4(function (a,b,c,d) {
      return {todoDoneListPair: a
             ,reminderField: b
             ,reminderDate: c
             ,addReminderVisibility: d};
   });
   return _elm.ItemFeed.values = {_op: _op
                                 ,Model: Model
                                 ,init: init
                                 ,getSelectedItemList: getSelectedItemList
                                 ,getSelectedItem: getSelectedItem
                                 ,getPreviousItemList: getPreviousItemList
                                 ,getPreviousItem: getPreviousItem
                                 ,getNextItemList: getNextItemList
                                 ,getNextItem: getNextItem
                                 ,TodoDoneListPair: TodoDoneListPair
                                 ,SaveContent: SaveContent
                                 ,SaveDate: SaveDate
                                 ,KeyPress: KeyPress
                                 ,ToggleAddReminder: ToggleAddReminder
                                 ,update: update
                                 ,view: view
                                 ,onEnter: onEnter
                                 ,is13: is13};
};