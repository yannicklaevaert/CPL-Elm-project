Elm.ItemListPair = Elm.ItemListPair || {};
Elm.ItemListPair.make = function (_elm) {
   "use strict";
   _elm.ItemListPair = _elm.ItemListPair || {};
   if (_elm.ItemListPair.values) return _elm.ItemListPair.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Item = Elm.Item.make(_elm),
   $ItemList = Elm.ItemList.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var getSelectedItemList = function (model) {
      return _U.cmp(model.selected,
      $List.length(model.todoList.items)) > 0 ? false : true;
   };
   var help = F2(function (id,list) {
      help: while (true) {
         var _p0 = list;
         if (_p0.ctor === "::") {
               if (_U.eq(_p0._0._0,id)) return _p0._0._1; else {
                     var _v1 = id,_v2 = _p0._1;
                     id = _v1;
                     list = _v2;
                     continue help;
                  }
            } else {
               return $Item.dummyItem;
            }
      }
   });
   var update = F2(function (action,model) {
      var _p1 = action;
      switch (_p1.ctor)
      {case "TodoList": var _p5 = _p1._0;
           var _p2 = _p5;
           if (_p2.ctor === "SubAction") {
                 var _p4 = _p2._0;
                 var _p3 = _p2._1;
                 switch (_p3.ctor)
                 {case "TogglePin": return _U.update(model,
                      {todoList: function () {
                         var updatedTodoList = A2($ItemList.update,
                         _p5,
                         model.todoList);
                         return {items: A2($ItemList.update,
                                $ItemList.SortNewWithPin,
                                updatedTodoList).items
                                ,nextItemId: model.todoList.nextItemId};
                      }()});
                    case "ToggleDone": return _U.update(model,
                      {doneList: function () {
                         var updatedTodoList = A2($ItemList.update,
                         _p5,
                         model.todoList);
                         return A2($ItemList.update,
                         A2($ItemList.AddItem,_p4,A2(help,_p4,updatedTodoList.items)),
                         model.doneList);
                      }()
                      ,todoList: A2($ItemList.update,
                      $ItemList.Remove(_p4),
                      model.todoList)});
                    default: return _U.update(model,
                      {todoList: A2($ItemList.update,_p5,model.todoList)});}
              } else {
                 return _U.update(model,
                 {todoList: A2($ItemList.update,_p5,model.todoList)});
              }
         case "DoneList": var _p9 = _p1._0;
           var _p6 = _p9;
           if (_p6.ctor === "SubAction") {
                 var _p8 = _p6._0;
                 var _p7 = _p6._1;
                 switch (_p7.ctor)
                 {case "TogglePin": return _U.update(model,
                      {doneList: function () {
                         var updatedDoneList = A2($ItemList.update,
                         _p9,
                         model.doneList);
                         return {items: A2($ItemList.update,
                                $ItemList.SortNewWithPin,
                                updatedDoneList).items
                                ,nextItemId: model.doneList.nextItemId};
                      }()});
                    case "ToggleDone": return _U.update(model,
                      {todoList: function () {
                         var updatedDoneList = A2($ItemList.update,
                         _p9,
                         model.doneList);
                         return A2($ItemList.update,
                         A2($ItemList.AddItem,_p8,A2(help,_p8,updatedDoneList.items)),
                         model.todoList);
                      }()
                      ,doneList: A2($ItemList.update,
                      $ItemList.Remove(_p8),
                      model.doneList)});
                    default: return _U.update(model,
                      {doneList: A2($ItemList.update,_p9,model.doneList)});}
              } else {
                 return _U.update(model,
                 {doneList: A2($ItemList.update,_p9,model.doneList)});
              }
         case "SortOldWithoutPin": return _U.update(model,
           {todoList: A2($ItemList.update,
           $ItemList.SortOldWithoutPin,
           model.todoList)
           ,doneList: A2($ItemList.update,
           $ItemList.SortOldWithoutPin,
           model.doneList)});
         case "SortNewWithPin": return _U.update(model,
           {todoList: A2($ItemList.update,
           $ItemList.SortNewWithPin,
           model.todoList)
           ,doneList: A2($ItemList.update,
           $ItemList.SortNewWithPin,
           model.doneList)});
         default: var _p15 = _p1._0;
           var _p10 = _p15;
           if (_p10.ctor === "ToggleDone") {
                 if (getSelectedItemList(model)) {
                       var _p11 = A2($ItemList.getItem,
                       model.selected,
                       model.todoList);
                       var id = _p11._0;
                       return _U.update(model,
                       {doneList: function () {
                          var updatedTodoList = A2($ItemList.update,
                          A2($ItemList.SubAction,id,_p15),
                          model.todoList);
                          return A2($ItemList.update,
                          A2($ItemList.AddItem,id,A2(help,id,updatedTodoList.items)),
                          model.doneList);
                       }()
                       ,todoList: A2($ItemList.update,
                       $ItemList.Remove(id),
                       model.todoList)});
                    } else {
                       var _p12 = A2($ItemList.getItem,
                       model.selected,
                       model.doneList);
                       var id = _p12._0;
                       return _U.update(model,
                       {todoList: function () {
                          var updatedDoneList = A2($ItemList.update,
                          A2($ItemList.SubAction,id,_p15),
                          model.doneList);
                          return A2($ItemList.update,
                          A2($ItemList.AddItem,id,A2(help,id,updatedDoneList.items)),
                          model.todoList);
                       }()
                       ,doneList: A2($ItemList.update,
                       $ItemList.Remove(id),
                       model.doneList)});
                    }
              } else {
                 if (getSelectedItemList(model)) {
                       var _p13 = A2($ItemList.getItem,
                       model.selected,
                       model.todoList);
                       var id = _p13._0;
                       return _U.update(model,
                       {todoList: A2($ItemList.update,
                       A2($ItemList.SubAction,id,_p15),
                       model.todoList)});
                    } else {
                       var _p14 = A2($ItemList.getItem,
                       model.selected,
                       model.doneList);
                       var id = _p14._0;
                       return _U.update(model,
                       {doneList: A2($ItemList.update,
                       A2($ItemList.SubAction,id,_p15),
                       model.doneList)});
                    }
              }}
   });
   var UpdateSelectedItem = function (a) {
      return {ctor: "UpdateSelectedItem",_0: a};
   };
   var SortNewWithPin = {ctor: "SortNewWithPin"};
   var SortOldWithoutPin = {ctor: "SortOldWithoutPin"};
   var DoneList = function (a) {
      return {ctor: "DoneList",_0: a};
   };
   var TodoList = function (a) {
      return {ctor: "TodoList",_0: a};
   };
   var view = F2(function (address,model) {
      return A2($Html.div,
      _U.list([]),
      _U.list([A2($Html.div,
              _U.list([]),
              _U.list([_U.eq($List.length(model.todoList.items),
                      0) ? A2($Html.p,_U.list([]),_U.list([])) : A2($Html.h1,
                      _U.list([]),
                      _U.list([$Html.text("To do")]))
                      ,A2($ItemList.view,
                      A2($Signal.forwardTo,address,TodoList),
                      model.todoList)]))
              ,A2($Html.div,
              _U.list([]),
              _U.list([_U.eq($List.length(model.doneList.items),
                      0) ? A2($Html.p,_U.list([]),_U.list([])) : A2($Html.h1,
                      _U.list([]),
                      _U.list([$Html.text("Done")]))
                      ,A2($ItemList.view,
                      A2($Signal.forwardTo,address,DoneList),
                      model.doneList)]))]));
   });
   var init = {todoList: function () {
                 var initTodoList = $ItemList.init;
                 return A2($ItemList.update,
                 A2($ItemList.SubAction,0,$Item.Select),
                 initTodoList);
              }()
              ,doneList: $ItemList.initEmpty
              ,selected: 1};
   var Model = F3(function (a,b,c) {
      return {todoList: a,doneList: b,selected: c};
   });
   return _elm.ItemListPair.values = {_op: _op
                                     ,Model: Model
                                     ,init: init
                                     ,TodoList: TodoList
                                     ,DoneList: DoneList
                                     ,SortOldWithoutPin: SortOldWithoutPin
                                     ,SortNewWithPin: SortNewWithPin
                                     ,UpdateSelectedItem: UpdateSelectedItem
                                     ,help: help
                                     ,getSelectedItemList: getSelectedItemList
                                     ,update: update
                                     ,view: view};
};