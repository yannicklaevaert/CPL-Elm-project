Elm.ItemListPair = Elm.ItemListPair || {};
Elm.ItemListPair.make = function (_elm) {
   "use strict";
   _elm.ItemListPair = _elm.ItemListPair || {};
   if (_elm.ItemListPair.values) return _elm.ItemListPair.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $ItemList = Elm.ItemList.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var update = F2(function (action,_p0) {
      var _p1 = _p0;
      var _p4 = _p1._0;
      var _p3 = _p1._1;
      var _p2 = action;
      if (_p2.ctor === "TodoList") {
            return {ctor: "_Tuple2"
                   ,_0: A2($ItemList.update,_p2._0,_p4)
                   ,_1: _p3};
         } else {
            return {ctor: "_Tuple2"
                   ,_0: _p4
                   ,_1: A2($ItemList.update,_p2._0,_p3)};
         }
   });
   var DoneList = function (a) {
      return {ctor: "DoneList",_0: a};
   };
   var TodoList = function (a) {
      return {ctor: "TodoList",_0: a};
   };
   var view = F2(function (address,model) {
      return A2($Html.div,
      _U.list([]),
      _U.list([_U.eq($List.length($Basics.fst(model).items),
              0) ? A2($Html.p,_U.list([]),_U.list([])) : A2($Html.h1,
              _U.list([]),
              _U.list([$Html.text("To do")]))
              ,A2($ItemList.view,
              A2($Signal.forwardTo,address,TodoList),
              $Basics.fst(model))
              ,_U.eq($List.length($Basics.snd(model).items),0) ? A2($Html.p,
              _U.list([]),
              _U.list([])) : A2($Html.h1,
              _U.list([]),
              _U.list([$Html.text("Done")]))
              ,A2($ItemList.view,
              A2($Signal.forwardTo,address,DoneList),
              $Basics.snd(model))]));
   });
   var init = {ctor: "_Tuple2"
              ,_0: $ItemList.init
              ,_1: $ItemList.initEmpty};
   return _elm.ItemListPair.values = {_op: _op
                                     ,init: init
                                     ,TodoList: TodoList
                                     ,DoneList: DoneList
                                     ,update: update
                                     ,view: view};
};